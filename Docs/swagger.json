
{
    "swagger": "2.0",
    "info": {
        "title": "BANKING SYSTEM",
        "description": "This is the API Specification for the Banking system backend server",
        "version": "1.0.0",
        "contact": {
            "email": "m.bienaimee@alustudent.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/mit"
        },
        "externalDocs": {
            "description": "Get source code",
            "url": "https://github.com/mbienaimee/bsa"
        }
    },
    "basePath": "/swagger-api",
    "schemes": ["http", "https"],
    "tags": [
        {
            "name": "User",
            "description": "Operations pertaining to user"
        },
        {
            "name": "Account",
            "description": "Operations pertaining to user"
        }
    ],
    "paths": {
        "/api/v1/register": {
            "post": {
                "tags": ["Authantication"],
                "summary": "Add a new user",
                "description": "Creates a new user with the provided details",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/user"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/get": {
            "get": {
                "tags": ["user"],
                "summary": "Get all users",
                "description": "Retrieves a list of all user",
                "responses": {
                    "200": {
                        "description": "user retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/user"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/update": {
            "put": {
                "tags": ["user"],
                "summary": "Update a user",
                "description": "Updates an existing user with the provided details",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/user"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "user updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/findById": {
            "get": {
                "tags": ["user"],
                "summary": "Get a user by ID",
                "description": "Retrieves a specific user based on its ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/delete": {
            "delete": {
                "tags": ["user"],
                "summary": "Delete a user",
                "description": "Deletes a user based on its ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "user deleted"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "tags": ["user"],
                "summary": "Registration of user",
                "description": "Register a new user  with the provided details",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "tags": ["user"],
                "summary": "Login existing user",
                "description": "Login existing user with the provided details",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User Login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "user": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Unique identifier of the task"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "Name of user"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "Description of the task"
                    },
                    "email": {
                        "type": "number",
                        "description": "Price of user per unit"
                    },
                    "age": {
                        "type": "number",
                        "description": "The quantity of user in stock"
                    },
                    "password": {
                        "type": "number",
                        "description": "The quantity of user in stock"
                    },
                    "role": {
                        "type": "number",
                        "description": "The quantity of user in stock"
                    },
                    "verified": {
                        "type": "number",
                        "description": "The quantity of user in stock"
                    },
                    "otpExpires": {
                        "type": "number",
                        "description": "The quantity of user in stock"
                    }

                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Unique identifier of the task"
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of User"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email of the user"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user"
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "description": "Is it admin or not?"
                    },
                    "otp": {
                        "type": "number",
                        "description": "The verification code sent to the user email"
                    }
                }
            }
        }
    }
}